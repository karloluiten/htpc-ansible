---
# file: tasks/main.yml
# Top-level installer for Prometheus.
#
# @see https://github.com/prometheus/prometheus
# @see http://prometheus.io/docs/introduction/getting_started/
#

# - name: set role variables, if necessary
#   include: set-role-variables.yml

# - name: install libselinux-python binary for Ansible to work
#   yum: name=libselinux-python state=present
#   when: ansible_pkg_mgr == "yum"

# - name: install dependencies for compiling Prometheus source code
#   include: install-compile-tools.yml
#   when: prometheus_alertmanager_version == "git" or prometheus_node_exporter_version == "git" or prometheus_version == "git"



# - name: create Prometheus group
#   group: name={{ prometheus_group }}  state=present

# - name: create Prometheus user
#   user:
#     name: "{{ prometheus_user }}"
#     group: "{{ prometheus_group }}"
#     createhome: no
#     shell: /sbin/nologin
#     comment: "Prometheus User"
#     state: present

# - name: mkdir for general cases
#   file:
#     path: "{{ item }}"
#     state: directory
#     owner: "{{ prometheus_user }}"
#     group: "{{ prometheus_group }}"
#     mode: "u=rwx,g=rx,o="
#   with_items:
#     - "{{ prometheus_install_path }}"
#     - "{{ prometheus_config_path }}"
#     - "{{ prometheus_log_path }}"
#     - "{{ prometheus_pid_path }}"


# - name: install helper utility "gosu"
#   include: install-gosu.yml

# - name: install prometheus
#   include: install-prometheus.yml
#   when: '"prometheus" in prometheus_components'

# - name: install node-exporter
#   include: install-node-exporter.yml
#   when: '"node_exporter" in prometheus_components'

# - name: install alertmanager
#   include: install-alertmanager.yml
#   when: '"alertmanager" in prometheus_components'

- name: create ext storage volume path
  file: state=directory path={{ item }} mode=0750
  with_items:
    - "{{ ext_prometheus_storage_volume }}"
    - "{{ ext_prometheus_conf_volume }}"

- name: copy prometheus main config file
  template:
    src: "prometheus.yml.j2"
    dest: "{{ ext_prometheus_conf_volume }}/prometheus.yml"

- name: start prometheus container
  become: yes
  become_user: "{{ ubuntu_user }}"
  docker:
    image: prom/prometheus
    state: reloaded
    read_only: yes
    hostname: "prom-{{ ansible_hostname }}"
    dns:
      - 8.8.8.8
    ports:
      - "{{ prometheus_port }}:9090"
    volumes:
      - "{{ ext_prometheus_conf_volume }}/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "{{ ext_prometheus_storage_volume }}:/prometheus"
    name: prometheus
    restart_policy: always
    restart_policy_retry: 10

- name: start node exporter container
  become: yes
  become_user: "{{ ubuntu_user }}"
  docker:
    name: node_exporter
    image: "prom/node-exporter"
    privileged: yes
    net: host
    state: reloaded
    pull: missing
    restart_policy: always

- name: start Grafana container
  become: yes
  become_user: "{{ ubuntu_user }}"
  docker:
    name: Grafana
    privileged: no
    image: "grafana/grafana"
    state: reloaded
    pull: missing
    restart_policy: always
    ports:
    - "3000:3000"
    volumes:
      - "/home/{{ ubuntu_user }}/grafana_db{{ ':' }}/var/lib/grafana"
    env:
      GF_SECURITY_ADMIN_USER: "{{ prometheus_grafana_username|default(grafana) }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ prometheus_grafana_password|default(grafana) }}"
      GF_AUTH_GITHUB_ENABLED: true
      GF_AUTH_GITHUB_ALLOW_SIGN_UP: true
